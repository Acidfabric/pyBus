{"body":"pyBus\r\n=====\r\n\r\niBus interface for my E46 BMW written in Python\r\nThis is to be used with the USB interface which can be acquired from [Reslers.de](http://www.reslers.de/IBUS/)\r\n\r\nThe software expects MPD to be working on whatever it is installed on (I use a Raspberry-Pi, if you are interested in doing the same, check out the project page on my blog for a guide! [HEAH](http://blog.danielvagg.com/blog/?page_id=25))\r\n\r\n## Overview\r\nThere are 2 main components:  \r\n**pyBus.py** - Interfaces with the iBus to emulate a CD-Changer as well as other devices:\r\n* Loads up a music library from a memory stick.\r\n* Emulates a CD changer with appropriate signals and responses\r\n* Plays music over the car speakers\r\n* Can be controlled using radio controls and steering wheel controls as you would expect.\r\n* Displays track info on the standard radio LED display (not the fancy screens)\r\n\r\n**pyBus_web.py** - Web-Server which creates a web-page that allows a user to:  \r\n* Play/Pause\r\n* Next/Previous\r\n* Modify Playlist\r\n\r\n### Useful links\r\nhttp://linux.die.net/man/5/mpd.conf   \r\nhttp://miro.oorganica.com/raspberry-pi-mpd/   \r\nhttp://web.comhem.se/bengt-olof.swing/ibusdevicesandoperations.htm   \r\n\r\n### Warning\r\nThe software is not completely finished, and regardless of its state, I shall not accept liability for any damage done by this software (though it is next to impossible due to the nature of the iBus).\r\n\r\n### Architecture/Operation\r\nI am in the process of illustrating this. At the very least I should let you know there are multiple threads involved in this.\r\n\r\n## Pre-Requisites\r\n* python, mpd, python-setuptools, mpc (mpd CLI, useful for testing)\r\n\t* `apt-get install python python-setuptools mpd mpc`\r\n* **Python modules:** termcolor, web.py, python-mpd, pyserial, probably more\r\n\t* `easy_install termcolor web.py python-mpd pyserial`\r\n## How to use\r\n* Install the prerequisites above. There may be more, feel free to leave a comment letting me know which one.\r\n* Ensure music is available at /music and that mpd is configured to read from there (best test mpc using mpc prior). NOTE: I use a little bit of BASh to mount my memory stick to /music on boot up. \r\n* There is also a requirement for a folder: (/music/pyBus). Logging will go in this folder, which is useful for debugging away from the RPi.\r\n\r\n* Plug in iBus USB device\r\n* Run: `./pyBus.py <PATH to USB Device>`\r\n\t* E.g. `./pyBus.py /dev/ttyUSB0`\r\n","name":"Pybus","tagline":"iBus interface for my E46 BMW written in Python","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}